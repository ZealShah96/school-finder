// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const cheerio = require('cheerio')
const fs = require('fs');
let links = [];
let defaultLink = 'https://www.schoolfinder.com/';
let resultsCount = 0;


describe('school finder', function () {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function () {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function () {
    // await driver.quit();
  })
  it('Count match', async function (done) {
    await driver.get("https://www.schoolfinder.com/Schools/SchoolSearch.aspx")
    await driver.findElement(By.id("txtSchoolSearch")).click()
    await driver.findElement(By.id("txtSchoolSearch")).sendKeys("college")
    await driver.findElement(By.id("btnSchoolSearch")).click()
    sleep(5000);
    try {
      await findResultsCount(driver);
      await PrintAllLinksAndFindNextBtton(driver);
    }
    catch (e) {
      console.log(e.name);
    }
    console.log(links.join(','));
    fs.writeFile(`./${Date.now()}.txt`, links.join(','), (err, file) => {
      if (err) {
        console.log(err);
      }
      else {
        console.log('file created!');
      }
    });
    done()
  })
})


async function findResultsCount(driver) {
  var numberPattern = /\d+/g;
  try {
    sleep(50000);
    var countElement = await findElement(driver, 'ctl00_ContentPlaceHolder1_SchoolSearchResultControl_lblResults');
    var innerHtml = await countElement.getAttribute('innerHTML');
    resultsCount = parseInt(await innerHtml.match(numberPattern));
    console.log(`Total Results avaiable:- ${resultsCount}`);
  }
  catch (e) {
    console.log(`Page is not loaded.`);
  }
  return countElement;
}

async function findElement(driver, elementId) {
  //console.log(`code will try to find element with this id :- ${elementId}`);
  try {
    sleep(100);
    var element = await driver.findElement(By.id(elementId));
    // console.log(element);
  }
  catch (e) {
    console.log(e.name);
  }
  return element;
}


async function findElementByClassName(driver, elementId) {
  //console.log(`code will try to find element with this id :- ${elementId}`);
  try {
    var element = await driver.findElement(By.className(elementId));
    console.log(element);
  }
  catch (e) {
    console.log(e.name);
  }
  return element;
}

async function PrintAllLinksAndFindNextBtton(driver) {
  // console.log('in PrintAllLinksAndFindNextBtton')
  var element = await findElement(driver, "Page-Content");
  //console.log(await element);
  printAllLinks(await element.getAttribute('innerHTML'));
  //console.log('All Links printed')
  if (checkNextAvaiable(driver)) {
    //  console.log('Next Button found')
    sleep(50000);
    var element = await findElement(driver, "ctl00_ContentPlaceHolder1_SchoolSearchResultControl_lbnNext");
    await element.click();
    //await driver.findElement(By.id("ctl00_ContentPlaceHolder1_SchoolSearchResultControl_lbnNext")).click()
    if (links.length < resultsCount) {
      await PrintAllLinksAndFindNextBtton(driver);
    }
  }
}

async function checkNextAvaiable(driver) {
  sleep(50000);
  //console.log('in find for new next button')
  let element = null;
  try {
    element = await findElement(driver, "ctl00_ContentPlaceHolder1_SchoolSearchResultControl_lbnNext");
    element = element.getAttribute('id');
    // await driver.findElement(By.id("ctl00_ContentPlaceHolder1_SchoolSearchResultControl_lbnNext")).getAttribute('id');
  }
  catch (e) {
    console.log(e.name);
  }
  if (element != null) {
    // console.log('in new next button found')
    return true;
  }
  else {
    //console.log('in no new next btn found')
    return false;
  }
}

async function printAllLinks(html) {
  let $ = cheerio.load(html);
  // console.log(html);
  let elements = $('a.School-SchoolName');
  let count = $('a.School-SchoolName').length;
  $('a.School-SchoolName').each((index, element) => {
    console.log(links.length);
    console.log(resultsCount);
    if (links.length < resultsCount) {
      links.push(`${defaultLink}${$(element).attr('href')}`);
      // console.log(`${defaultLink}${$(element).attr('href')}`);
    }
    else if (links.indexOf(`${defaultLink}${$(element).attr('href')}`) > 0) {
      console.log('Link is already avaiable.')
    }
    else {
      console.log('all links are fetched!!!');
    }
  });
  // Usage!
  sleep(5000).then(() => {
    // console.log('done!');
  });
}


// sleep time expects milliseconds
function sleep(time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}

